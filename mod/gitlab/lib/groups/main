# shellcheck shell=sh
# shellcheck disable=SC2039,3043

# define lazy loader
# ___x_cmd_definelazyloader   ___x_cmd_gitlab_groups_member           gitlab/lib/groups/member

___x_cmd_gitlab_groups(){
    param:scope     ___x_cmd_gitlab
    param:subcmd ___x_cmd_gitlab_groups                            \
        ls                      "List all groups"              \
        info                    "Show groups information"      \
        create                  "Create groups"                \
        repo                    "List all repos"            \
        quit                    "Quit groups"                  \
        issue                   "List all issues"           \
        member                  "groups member management"
    param:subcmd:try
    param:run

    ___x_cmd_gitlab_groups _param_help_doc
    gitlab_log warn "Subcmd Not Found."
    return 1
}

# Section: list & info
# shellcheck disable=SC2154
# https://gitee.com/api/swagger#/getV5Usergroupss
___x_cmd_gitlab_groups_ls(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    --admin         "admin"             <>:Bool=false
    --page          "page"              <>:NatureNumber=1
    --per_page      "per_page"          <>:NatureNumber=20
'
    param:run

    ___gitlab_ui_mutual ___x_cmd_gitlab_get_multi "/user/groupss" admin <<A
        ___ui_table_json Id=.id Name=.name FollowCount=.follow_count Url=.repos_url -- \$@
A
}

# shellcheck disable=SC2154
# https://gitee.com/api/swagger#/getV5groupssgroups
___x_cmd_gitlab_groups_info(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--groups            "groupsanization path"     <>=""
'
    param:run

    ___x_cmd_gitlab_http get "/groupss/${1:?Provide groupsanization}" | \
    {
        ___x_cmd_git_json_query_rename id=.id name=.name public=.public follow_count=.follow_count owner=.owner.name
        if [ -n "$id" ]; then
            ___x_cmd_ui_tf true   "Success" "id: $id" "name: $name" "public: $public" "follow_count: $follow_count" "owner: $owner"
        else
            ___x_cmd_ui_tf false  "Couldn't find any groupsanization info data by $1"
            return 1
        fi
    }
}
# EndSection

# Section: create
# It is very rare TODO: batch?
# shellcheck disable=SC2181
# https://gitee.com/api/swagger#/postV5Usersgroupsanization
___x_cmd_gitlab_groups_create(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    --groups           "groupsanization path"     <>=""
    --description   "description"           <>=""
    #1              "groupsanization name"     <>
'
    param:run

    groups=${groups:-$1}
    local gen_gitlab_json
    local name
    name="$1"
    gen_gitlab_json="$(param:option2json +name)"

    ___x_cmd_gitlab_http post "/users/groupsanization" "$gen_gitlab_json" | \
    {
        ___x_cmd_git_json_query_rename id=.id
        if [ -n "$id" ]; then
            ___x_cmd_ui_tf true   "Creating groupsanization Successfully"
        else
            ___x_cmd_ui_tf false  "Creating groupsanization failure by $1."
            return 1
        fi
    }
}
# EndSection

# Section: groups repo
___x_cmd_gitlab_groups_repo(){
    param:subcmd ___x_cmd_gitlab_groups_repo           \
        ls          "list repo"                 \
        create      "groups repo create"
    param:subcmd:try
    param:run

    ___x_cmd_gitlab_groups_repo _param_help_doc
    gitlab_log warn "Subcmd Not Found."
    return 1
}

# https://gitee.com/api/swagger#/getV5groupssgroupsRepos
___x_cmd_gitlab_groups_repo_ls(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #1|--groups        "Please provide groupsanization"       <>:Address
    --type          "type"                              <>:RepoAllAccess="all"
    --page          "page"                              <>:NatureNumber=1
    --per_page      "per_page"                          <>:NatureNumber=20
'
    param:run
    local gen_gitlab_json
    gen_gitlab_json="$(param:option2json -page -per_page)"

    local ___gitlab_error_msg="Couldn't find any data by: ${1}"
    ___gitlab_ui_mutual ___x_cmd_gitlab_get_multi "/groupss/$1/repos" type <<A
        ___ui_table_json Id=.id Name=.name public=.public OwnerName=.owner.name DefaultBranch=.default_branch \
            OpenIssuesCount=.open_issues_count license=.license Url=.html_url -- \$@
A
}
# EndSection

# Section: quit
# shellcheck disable=SC2181
# https://gitee.com/api/swagger#/deleteV5UserMembershipsgroupssgroups
___x_cmd_gitlab_groups_quit(){
    param:scope     ___x_cmd_gitlab
    param:dsl       '
options:
    #n      "groupss"
'
    param:run

    [ $# -eq 0 ] && gitlab_log error "At least one groups spatial address is needed." && return 1

    for groups in "$@"; do
        # TODO:http handleï¼Œdelete repo return data is null.Status: 204 No Content
        if ___x_cmd_gitlab_http delete "/user/memberships/groupss/${groups##*/}" >/dev/null; then
            gitlab_log info  "Quit $groups groupsanization successfully."
        else
            gitlab_log error "Quit $groups groupsanization failure"
            return 1
        fi
    done
}
# EndSection
